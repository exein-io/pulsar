name: Quality Checks
on:
  pull_request:
    branches:
      - main

jobs:
  markdown-link-check:
    name: Broken markdown links
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Run link check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "no"
          use-verbose-mode: "yes"
          check-modified-files-only: "no"
          base-branch: ${{ github.head_ref }}

  fmt:
    name: Formatting (rustfmt)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable

        platform:
          - target: x86_64-unknown-linux-gnu

    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Install Rust toolchain (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.platform.target }}
          override: true
          components: rustfmt

      - name: Formatting (rustfmt)
        run: cargo fmt -- --check

  lint:
    name: Lint (clippy)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable

        platform:
          - target: x86_64-unknown-linux-gnu
            cross: false
            all-targets: true
          - target: x86_64-unknown-linux-musl
            cross: false
            all-targets: true
          - target: aarch64-unknown-linux-gnu
            cross: true
            all-targets: true
          - target: aarch64-unknown-linux-musl
            cross: true
            all-targets: true
          # Dependencies of xtask might fail to build on riscv64.
          - target: riscv64gc-unknown-linux-gnu
            cross: true
            all-targets: false

    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Install musl-gcc
        run: sudo apt install -y musl-tools llvm

      - name: Install Rust toolchain (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.platform.target }}
          override: true
          components: clippy

      - name: Clippy (all crates, default features)
        uses: actions-rs/cargo@v1
        if: ${{ matrix.platform.all-targets }}
        with:
          use-cross: ${{ matrix.platform.cross }}
          command: clippy
          args: --locked --target=${{ matrix.platform.target }} --workspace --all-targets -- -D warnings

      - name: Clippy (default features)
        uses: actions-rs/cargo@v1
        if: ${{ !matrix.platform.all-targets }}
        with:
          use-cross: ${{ matrix.platform.cross }}
          command: clippy
          args: --locked --target=${{ matrix.platform.target }} -- -D warnings

      - name: Check build did not modify any files
        run: test -z "$(git status --porcelain)"
