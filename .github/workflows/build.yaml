name: Build
on:
  pull_request:
    branches:
      - main

env:
  LLVM_VERSION: 18

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile:
          - debug
          - release

        platform:
          - target: x86_64-unknown-linux-gnu
            args: "--features full"

          # For `musl` builds, use the `all-vendored` and `tls-rustls` features.
          - target: x86_64-unknown-linux-musl
            args: "--no-default-features --features full --features all-vendored --features tls-rustls"

          - target: aarch64-unknown-linux-gnu
            args: "--features full"

          # For `musl` builds, use the `all-vendored` and `tls-rustls` features.
          - target: aarch64-unknown-linux-musl
            args: "--no-default-features --features full --features all-vendored --features tls-rustls"

          - target: riscv64gc-unknown-linux-gnu
            args: "--features full"

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        if: endsWith(matrix.platform.target, 'musl')
        run: |
          sudo apt install -y qemu-system

      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.platform.target }}

      - name: Install cross
        uses: ./.github/actions/install-cross

      - name: Build Debug
        if: ${{ matrix.profile == 'debug' }} 
        run: cross build --locked --target=${{ matrix.platform.target }} --workspace --all-targets ${{ matrix.platform.args }}

      - name: Build Release
        if: ${{ matrix.profile == 'release' }} 
        run: cross build --locked --target=${{ matrix.platform.target }} --workspace --all-targets ${{ matrix.platform.args }} --release

      - name: Check build did not modify any files
        run: |
          CHANGES=$(git status --porcelain)
          if [ -n "$CHANGES" ]; then
            echo "Changes detected:"
            git diff
          fi
          test -z "$CHANGES"

      - name: Unit tests
        run: cross test --locked --target=${{ matrix.platform.target }} --workspace --all-targets ${{ matrix.platform.args }}

      - name: Integration tests
        if: endsWith(matrix.platform.target, 'musl')
        run: |
            for kernel in 5.10 5.13 5.15 6.0 6.3 6.6; do
                cargo xtask test --force-architest --target=${{ matrix.platform.target }} --kernel-version $kernel
            done
