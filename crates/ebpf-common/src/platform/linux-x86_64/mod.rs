use std::collections::HashMap;
use std::sync::OnceLock;

pub fn syscalls() -> &'static HashMap<usize, &'static str> {
    static SYSCALLS: OnceLock<HashMap<usize, &'static str>> = OnceLock::new();

    SYSCALLS.get_or_init(|| {
        let mut m = HashMap::new();

        m.insert(0, "READ");
        m.insert(1, "WRITE");
        m.insert(2, "OPEN");
        m.insert(3, "CLOSE");
        m.insert(4, "STAT");
        m.insert(5, "FSTAT");
        m.insert(6, "LSTAT");
        m.insert(7, "POLL");
        m.insert(8, "LSEEK");
        m.insert(9, "MMAP");
        m.insert(10, "MPROTECT");
        m.insert(11, "MUNMAP");
        m.insert(12, "BRK");
        m.insert(13, "RT_SIGACTION");
        m.insert(14, "RT_SIGPROCMASK");
        m.insert(15, "RT_SIGRETURN");
        m.insert(16, "IOCTL");
        m.insert(17, "PREAD64");
        m.insert(18, "PWRITE64");
        m.insert(19, "READV");
        m.insert(20, "WRITEV");
        m.insert(21, "ACCESS");
        m.insert(22, "PIPE");
        m.insert(23, "SELECT");
        m.insert(24, "SCHED_YIELD");
        m.insert(25, "MREMAP");
        m.insert(26, "MSYNC");
        m.insert(27, "MINCORE");
        m.insert(28, "MADVISE");
        m.insert(29, "SHMGET");
        m.insert(30, "SHMAT");
        m.insert(31, "SHMCTL");
        m.insert(32, "DUP");
        m.insert(33, "DUP2");
        m.insert(34, "PAUSE");
        m.insert(35, "NANOSLEEP");
        m.insert(36, "GETITIMER");
        m.insert(37, "ALARM");
        m.insert(38, "SETITIMER");
        m.insert(39, "GETPID");
        m.insert(40, "SENDFILE");
        m.insert(41, "SOCKET");
        m.insert(42, "CONNECT");
        m.insert(43, "ACCEPT");
        m.insert(44, "SENDTO");
        m.insert(45, "RECVFROM");
        m.insert(46, "SENDMSG");
        m.insert(47, "RECVMSG");
        m.insert(48, "SHUTDOWN");
        m.insert(49, "BIND");
        m.insert(50, "LISTEN");
        m.insert(51, "GETSOCKNAME");
        m.insert(52, "GETPEERNAME");
        m.insert(53, "SOCKETPAIR");
        m.insert(54, "SETSOCKOPT");
        m.insert(55, "GETSOCKOPT");
        m.insert(56, "CLONE");
        m.insert(57, "FORK");
        m.insert(58, "VFORK");
        m.insert(59, "EXECVE");
        m.insert(60, "EXIT");
        m.insert(61, "WAIT4");
        m.insert(62, "KILL");
        m.insert(63, "UNAME");
        m.insert(64, "SEMGET");
        m.insert(65, "SEMOP");
        m.insert(66, "SEMCTL");
        m.insert(67, "SHMDT");
        m.insert(68, "MSGGET");
        m.insert(69, "MSGSND");
        m.insert(70, "MSGRCV");
        m.insert(71, "MSGCTL");
        m.insert(72, "FCNTL");
        m.insert(73, "FLOCK");
        m.insert(74, "FSYNC");
        m.insert(75, "FDATASYNC");
        m.insert(76, "TRUNCATE");
        m.insert(77, "FTRUNCATE");
        m.insert(78, "GETDENTS");
        m.insert(79, "GETCWD");
        m.insert(80, "CHDIR");
        m.insert(81, "FCHDIR");
        m.insert(82, "RENAME");
        m.insert(83, "MKDIR");
        m.insert(84, "RMDIR");
        m.insert(85, "CREAT");
        m.insert(86, "LINK");
        m.insert(87, "UNLINK");
        m.insert(88, "SYMLINK");
        m.insert(89, "READLINK");
        m.insert(90, "CHMOD");
        m.insert(91, "FCHMOD");
        m.insert(92, "CHOWN");
        m.insert(93, "FCHOWN");
        m.insert(94, "LCHOWN");
        m.insert(95, "UMASK");
        m.insert(96, "GETTIMEOFDAY");
        m.insert(97, "GETRLIMIT");
        m.insert(98, "GETRUSAGE");
        m.insert(99, "SYSINFO");
        m.insert(100, "TIMES");
        m.insert(101, "PTRACE");
        m.insert(102, "GETUID");
        m.insert(103, "SYSLOG");
        m.insert(104, "GETGID");
        m.insert(105, "SETUID");
        m.insert(106, "SETGID");
        m.insert(107, "GETEUID");
        m.insert(108, "GETEGID");
        m.insert(109, "SETPGID");
        m.insert(110, "GETPPID");
        m.insert(111, "GETPGRP");
        m.insert(112, "SETSID");
        m.insert(113, "SETREUID");
        m.insert(114, "SETREGID");
        m.insert(115, "GETGROUPS");
        m.insert(116, "SETGROUPS");
        m.insert(117, "SETRESUID");
        m.insert(118, "GETRESUID");
        m.insert(119, "SETRESGID");
        m.insert(120, "GETRESGID");
        m.insert(121, "GETPGID");
        m.insert(122, "SETFSUID");
        m.insert(123, "SETFSGID");
        m.insert(124, "GETSID");
        m.insert(125, "CAPGET");
        m.insert(126, "CAPSET");
        m.insert(127, "RT_SIGPENDING");
        m.insert(128, "RT_SIGTIMEDWAIT");
        m.insert(129, "RT_SIGQUEUEINFO");
        m.insert(130, "RT_SIGSUSPEND");
        m.insert(131, "SIGALTSTACK");
        m.insert(132, "UTIME");
        m.insert(133, "MKNOD");
        m.insert(134, "USELIB");
        m.insert(135, "PERSONALITY");
        m.insert(136, "USTAT");
        m.insert(137, "STATFS");
        m.insert(138, "FSTATFS");
        m.insert(139, "SYSFS");
        m.insert(140, "GETPRIORITY");
        m.insert(141, "SETPRIORITY");
        m.insert(142, "SCHED_SETPARAM");
        m.insert(143, "SCHED_GETPARAM");
        m.insert(144, "SCHED_SETSCHEDULER");
        m.insert(145, "SCHED_GETSCHEDULER");
        m.insert(146, "SCHED_GET_PRIORITY_MAX");
        m.insert(147, "SCHED_GET_PRIORITY_MIN");
        m.insert(148, "SCHED_RR_GET_INTERVAL");
        m.insert(149, "MLOCK");
        m.insert(150, "MUNLOCK");
        m.insert(151, "MLOCKALL");
        m.insert(152, "MUNLOCKALL");
        m.insert(153, "VHANGUP");
        m.insert(154, "MODIFY_LDT");
        m.insert(155, "PIVOT_ROOT");
        m.insert(156, "SYSCTL");
        m.insert(157, "PRCTL");
        m.insert(158, "ARCH_PRCTL");
        m.insert(159, "ADJTIMEX");
        m.insert(160, "SETRLIMIT");
        m.insert(161, "CHROOT");
        m.insert(162, "SYNC");
        m.insert(163, "ACCT");
        m.insert(164, "SETTIMEOFDAY");
        m.insert(165, "MOUNT");
        m.insert(166, "UMOUNT2");
        m.insert(167, "SWAPON");
        m.insert(168, "SWAPOFF");
        m.insert(169, "REBOOT");
        m.insert(170, "SETHOSTNAME");
        m.insert(171, "SETDOMAINNAME");
        m.insert(172, "IOPL");
        m.insert(173, "IOPERM");
        m.insert(174, "CREATE_MODULE");
        m.insert(175, "INIT_MODULE");
        m.insert(176, "DELETE_MODULE");
        m.insert(177, "GET_KERNEL_SYMS");
        m.insert(178, "QUERY_MODULE");
        m.insert(179, "QUOTACTL");
        m.insert(180, "NFSSERVCTL");
        m.insert(181, "GETPMSG");
        m.insert(182, "PUTPMSG");
        m.insert(183, "AFS_SYSCALL");
        m.insert(184, "TUXCALL");
        m.insert(185, "SECURITY");
        m.insert(186, "GETTID");
        m.insert(187, "READAHEAD");
        m.insert(188, "SETXATTR");
        m.insert(189, "LSETXATTR");
        m.insert(190, "FSETXATTR");
        m.insert(191, "GETXATTR");
        m.insert(192, "LGETXATTR");
        m.insert(193, "FGETXATTR");
        m.insert(194, "LISTXATTR");
        m.insert(195, "LLISTXATTR");
        m.insert(196, "FLISTXATTR");
        m.insert(197, "REMOVEXATTR");
        m.insert(198, "LREMOVEXATTR");
        m.insert(199, "FREMOVEXATTR");
        m.insert(200, "TKILL");
        m.insert(201, "TIME");
        m.insert(202, "FUTEX");
        m.insert(203, "SCHED_SETAFFINITY");
        m.insert(204, "SCHED_GETAFFINITY");
        m.insert(205, "SET_THREAD_AREA");
        m.insert(206, "IO_SETUP");
        m.insert(207, "IO_DESTROY");
        m.insert(208, "IO_GETEVENTS");
        m.insert(209, "IO_SUBMIT");
        m.insert(210, "IO_CANCEL");
        m.insert(211, "GET_THREAD_AREA");
        m.insert(212, "LOOKUP_DCOOKIE");
        m.insert(213, "EPOLL_CREATE");
        m.insert(214, "EPOLL_CTL_OLD");
        m.insert(215, "EPOLL_WAIT_OLD");
        m.insert(216, "REMAP_FILE_PAGES");
        m.insert(217, "GETDENTS64");
        m.insert(218, "SET_TID_ADDRESS");
        m.insert(219, "RESTART_SYSCALL");
        m.insert(220, "SEMTIMEDOP");
        m.insert(221, "FADVISE64");
        m.insert(222, "TIMER_CREATE");
        m.insert(223, "TIMER_SETTIME");
        m.insert(224, "TIMER_GETTIME");
        m.insert(225, "TIMER_GETOVERRUN");
        m.insert(226, "TIMER_DELETE");
        m.insert(227, "CLOCK_SETTIME");
        m.insert(228, "CLOCK_GETTIME");
        m.insert(229, "CLOCK_GETRES");
        m.insert(230, "CLOCK_NANOSLEEP");
        m.insert(231, "EXIT_GROUP");
        m.insert(232, "EPOLL_WAIT");
        m.insert(233, "EPOLL_CTL");
        m.insert(234, "TGKILL");
        m.insert(235, "UTIMES");
        m.insert(236, "VSERVER");
        m.insert(237, "MBIND");
        m.insert(238, "SET_MEMPOLICY");
        m.insert(239, "GET_MEMPOLICY");
        m.insert(240, "MQ_OPEN");
        m.insert(241, "MQ_UNLINK");
        m.insert(242, "MQ_TIMEDSEND");
        m.insert(243, "MQ_TIMEDRECEIVE");
        m.insert(244, "MQ_NOTIFY");
        m.insert(245, "MQ_GETSETATTR");
        m.insert(246, "KEXEC_LOAD");
        m.insert(247, "WAITID");
        m.insert(248, "ADD_KEY");
        m.insert(249, "REQUEST_KEY");
        m.insert(250, "KEYCTL");
        m.insert(251, "IOPRIO_SET");
        m.insert(252, "IOPRIO_GET");
        m.insert(253, "INOTIFY_INIT");
        m.insert(254, "INOTIFY_ADD_WATCH");
        m.insert(255, "INOTIFY_RM_WATCH");
        m.insert(256, "MIGRATE_PAGES");
        m.insert(257, "OPENAT");
        m.insert(258, "MKDIRAT");
        m.insert(259, "MKNODAT");
        m.insert(260, "FCHOWNAT");
        m.insert(261, "FUTIMESAT");
        m.insert(262, "NEWFSTATAT");
        m.insert(263, "UNLINKAT");
        m.insert(264, "RENAMEAT");
        m.insert(265, "LINKAT");
        m.insert(266, "SYMLINKAT");
        m.insert(267, "READLINKAT");
        m.insert(268, "FCHMODAT");
        m.insert(269, "FACCESSAT");
        m.insert(270, "PSELECT6");
        m.insert(271, "PPOLL");
        m.insert(272, "UNSHARE");
        m.insert(273, "SET_ROBUST_LIST");
        m.insert(274, "GET_ROBUST_LIST");
        m.insert(275, "SPLICE");
        m.insert(276, "TEE");
        m.insert(277, "SYNC_FILE_RANGE");
        m.insert(278, "VMSPLICE");
        m.insert(279, "MOVE_PAGES");
        m.insert(280, "UTIMENSAT");
        m.insert(281, "EPOLL_PWAIT");
        m.insert(282, "SIGNALFD");
        m.insert(283, "TIMERFD_CREATE");
        m.insert(284, "EVENTFD");
        m.insert(285, "FALLOCATE");
        m.insert(286, "TIMERFD_SETTIME");
        m.insert(287, "TIMERFD_GETTIME");
        m.insert(288, "ACCEPT4");
        m.insert(289, "SIGNALFD4");
        m.insert(290, "EVENTFD2");
        m.insert(291, "EPOLL_CREATE1");
        m.insert(292, "DUP3");
        m.insert(293, "PIPE2");
        m.insert(294, "INOTIFY_INIT1");
        m.insert(295, "PREADV");
        m.insert(296, "PWRITEV");
        m.insert(297, "RT_TGSIGQUEUEINFO");
        m.insert(298, "PERF_EVENT_OPEN");
        m.insert(299, "RECVMMSG");
        m.insert(300, "FANOTIFY_INIT");
        m.insert(301, "FANOTIFY_MARK");
        m.insert(302, "PRLIMIT64");
        m.insert(303, "NAME_TO_HANDLE_AT");
        m.insert(304, "OPEN_BY_HANDLE_AT");
        m.insert(305, "CLOCK_ADJTIME");
        m.insert(306, "SYNCFS");
        m.insert(307, "SENDMMSG");
        m.insert(308, "SETNS");
        m.insert(309, "GETCPU");
        m.insert(310, "PROCESS_VM_READV");
        m.insert(311, "PROCESS_VM_WRITEV");
        m.insert(312, "KCMP");
        m.insert(313, "FINIT_MODULE");
        m.insert(314, "SCHED_SETATTR");
        m.insert(315, "SCHED_GETATTR");
        m.insert(316, "RENAMEAT2");
        m.insert(317, "SECCOMP");
        m.insert(318, "GETRANDOM");
        m.insert(319, "MEMFD_CREATE");
        m.insert(320, "KEXEC_FILE_LOAD");
        m.insert(321, "BPF");
        m.insert(322, "EXECVEAT");

        m
    })
}
