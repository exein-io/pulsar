- name: Netcat Remote Code Execution in Container
  type: Exec
  category: command_and_control
  severity: medium
  description: Detects the execution of the Netcat utility with specific arguments in a container. Attackers can exploit Netcat 
    to establish a reverse shell or transfer files to and from a compromised system, enabling unauthorized access to internal 
    resources and remote control over compromised systems.
  condition: |
    header.container.is_some() AND
    (
      (
        payload.filename ENDS_WITH "/nc" AND (
          payload.argv CONTAINS "-e" OR
          payload.argv CONTAINS "-c"
        )
      ) OR (
        payload.filename ENDS_WITH "/ncat" AND (
          payload.argv CONTAINS "--sh-exec" OR
          payload.argv CONTAINS "--exec" OR
          payload.argv CONTAINS "-e" OR
          payload.argv CONTAINS "-c" OR
          payload.argv CONTAINS "--lua-exec"
        )
      )
    )

- name: Chroot in container
  type: Exec
  category: defense_evasion
  severity: medium
  description: Monitors for the execution of the chroot utility in a container. Attackers may attempt to change the root directory 
    to evade detection by security controls.
  condition: |
    header.container.is_some() AND payload.filename ENDS_WITH "/chroot"

- name: Linux kernel module injection in container
  type: Exec
  category: defense_evasion
  severity: medium
  description: Detects the execution of the insmod utility to inject a Linux kernel module in a container. Attackers may attempt to 
    inject a kernel module to evade detection and avoid possible restrictions on their actions and resources.
  condition: |
    header.container.is_some() AND
    payload.filename ENDS_WITH "/modprobe" AND NOT
    payload.argv CONTAINS "-r"

- name: Reading kernel logs in container
  type: Exec
  category: discovery
  severity: low
  description: Monitors for the execution of the dmesg utility in a container. Attackers may attempt to read kernel logs to gather 
    information about the system and its configuration.
  condition: |
    header.container.is_some() AND
    payload.filename ENDS_WITH "/dmesg"

- name: Docker socket enumeration
  type: Exec
  category: discovery
  severity: low
  description: Detects potential Docker socket enumeration activity. Adversaries may abuse Docker socket enumeration to gain unauthorized access to the host system, escalate privileges, or
    move laterally within the environment.
  condition: (payload.filename ENDS_WITH "curl" OR payload.filename ENDS_WITH "socat" 
      OR payload.filename ENDS_WITH "nc" OR payload.filename ENDS_WITH "netcat"
      OR payload.filename ENDS_WITH "ncat" OR payload.filename ENDS_WITH "nc.traditional")
    AND payload.argv CONTAINS "/var/run/docker.sock" OR payload.argv CONTAINS "/run/docker.sock"

- name: File Made Executable via Chmod Inside A Container
  type: Exec
  category: execution
  severity: low
  description: Detects when chmod or chown are used to add the execute permission to a file inside a container. Modifying file
    permissions to make a file executable could indicate malicious activity, as an attacker may attempt to run unauthorized or malicious code inside the container.
  condition: header.container.is_some() 
    AND (payload.filename ENDS_WITH "chmod" OR payload.filename ENDS_WITH "chown")
    AND (payload.argv CONTAINS "4755" OR payload.argv CONTAINS "755" OR payload.argv CONTAINS "000" OR payload.argv CONTAINS"777" OR 
      payload.argv CONTAINS "444" OR payload.argv CONTAINS "-x" OR payload.argv CONTAINS"+x")

- name: Suspicious Network Tool Launched in Container
  type: Exec
  category: execution
  severity: low
  description: Deetects commonly abused network utilities running inside a container. Network utilities like nc, nmap, dig,
    tcpdump, ngrep, telnet, mitmproxy, zmap can be used for malicious purposes such as network reconnaissance, monitoring,
    or exploitation, and should be monitored closely within a container.
  condition: header.container.is_some() 
    AND (
      payload.filename ENDS_WITH "nc.traditional" OR
      payload.filename ENDS_WITH "nc" OR
      payload.filename ENDS_WITH "ncat" OR
      payload.filename ENDS_WITH "netcat" OR
      payload.filename ENDS_WITH "nmap" OR
      payload.filename ENDS_WITH "dig" OR
      payload.filename ENDS_WITH "nslookup" OR
      payload.filename ENDS_WITH "tcpdump" OR
      payload.filename ENDS_WITH "tshark" OR
      payload.filename ENDS_WITH "ngrep" OR
      payload.filename ENDS_WITH "telnet" OR
      payload.filename ENDS_WITH "mitmproxy" OR
      payload.filename ENDS_WITH "socat" OR
      payload.filename ENDS_WITH "zmap" OR
      payload.filename ENDS_WITH "masscan" OR
      payload.filename ENDS_WITH "zgrab"
    )

- name: Container Management Utility Run Inside A Container
  type: Exec
  category: execution
  severity: low
  description: Detects when a container management binary is run from inside a container. These binaries are critical
    components of many containerized environments, and their presence and execution in unauthorized containers could
    indicate compromise or a misconfiguration.
  condition: header.container.is_some() 
    AND (
      payload.filename ENDS_WITH "dockerd" OR
      payload.filename ENDS_WITH "docker" OR
      payload.filename ENDS_WITH "kubelet" OR
      payload.filename ENDS_WITH "kube-proxy" OR
      payload.filename ENDS_WITH "kubectl" OR
      payload.filename ENDS_WITH "containerd" OR
      payload.filename ENDS_WITH "runc" OR
      payload.filename ENDS_WITH "systemd" OR
      payload.filename ENDS_WITH "crictl"
    )

- name: Privileged Docker Container Creation
  type: Exec
  category: privilege_escalation
  severity: medium
  description: Detects Docker container launches with the --privileged flag, which can allow attackers to escalate privileges or escape containers.
  condition: header.container.is_some() AND
    payload.filename ENDS_WITH "/docker" AND
    payload.argv CONTAINS "run" AND
    payload.argv CONTAINS "--privileged"

- name: Mount Launched Inside a Container
  type: Exec
  category: privilege_escalation
  severity: medium
  description: Detects the use of the mount utility from inside a container. The mount command is used to make a
    device or file system accessible to the system, and then to connect its root directory to a specified mount point on the
    local file system. When launched inside a privileged container an attacker can access sensitive host level files which could be used for further privilege escalation
    and container escapes to the host machine. Any usage of mount inside a running privileged container should be further investigated.
  condition: header.container.is_some() AND
    payload.filename ENDS_WITH "mount"